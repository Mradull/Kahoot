{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/QuizPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    roomNo\n  } = useParams();\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [timer, setTimer] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\n        setQuiz(response.data);\n        setSelectedAnswers(Array(response.data.questions.length).fill(null));\n        setLoading(false);\n      } catch (err) {\n        console.error(\"❌ Error fetching quiz:\", err);\n        setError(\"Quiz not found.\");\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [roomNo]);\n  useEffect(() => {\n    if (!quiz) return;\n    const countdown = setInterval(() => {\n      setTimer(prev => prev - 1);\n    }, 1000);\n\n    // ✅ When timer runs out, go to leaderboard\n    if (timer === 0) {\n      setTimeout(() => {\n        navigate(`/leaderboard/${roomNo}`, {\n          state: {\n            currentQuestion: currentQuestionIndex\n          }\n        });\n      }, 1000);\n    }\n    return () => clearInterval(countdown);\n  }, [timer, quiz, navigate, currentQuestionIndex, roomNo]);\n\n  // ✅ Handle answer selection but DO NOT navigate immediately\n  const handleAnswerSelection = async index => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[currentQuestionIndex] = index;\n    setSelectedAnswers(newAnswers);\n\n    // ✅ Calculate score but DO NOT navigate\n    const isCorrect = quiz.questions[currentQuestionIndex].correctAnswer === index;\n    const score = isCorrect ? 100 : 0;\n    try {\n      await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\n        roomId: roomNo,\n        username: localStorage.getItem(\"username\"),\n        score: score\n      });\n      console.log(\"✅ Score submitted!\");\n    } catch (error) {\n      console.error(\"❌ Error submitting score:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quiz-title\",\n      children: [quiz.quizTitle, \" (Room: \", roomNo, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-question\",\n      children: quiz.questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-timer\",\n      children: [\"\\u23F3 \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-options-grid\",\n      children: quiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`,\n        onClick: () => handleAnswerSelection(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"3NiqAJJ3Te8WpwM5ipMmFXd1qrk=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","QuizPage","_s","roomNo","navigate","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","timer","setTimer","loading","setLoading","error","setError","fetchQuiz","response","get","data","Array","questions","length","fill","err","console","countdown","setInterval","prev","setTimeout","state","currentQuestion","clearInterval","handleAnswerSelection","index","newAnswers","isCorrect","correctAnswer","score","post","roomId","username","localStorage","getItem","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quizTitle","question","options","map","option","onClick","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/QuizPage.css\";\r\n\r\nconst QuizPage = () => {\r\n  const { roomNo } = useParams();\r\n  const navigate = useNavigate();\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [timer, setTimer] = useState(10);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\r\n        setQuiz(response.data);\r\n        setSelectedAnswers(Array(response.data.questions.length).fill(null));\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"❌ Error fetching quiz:\", err);\r\n        setError(\"Quiz not found.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [roomNo]);\r\n\r\n  useEffect(() => {\r\n    if (!quiz) return;\r\n\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    // ✅ When timer runs out, go to leaderboard\r\n    if (timer === 0) {\r\n      setTimeout(() => {\r\n        navigate(`/leaderboard/${roomNo}`, { state: { currentQuestion: currentQuestionIndex } });\r\n      }, 1000);\r\n    }\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [timer, quiz, navigate, currentQuestionIndex, roomNo]);\r\n\r\n  // ✅ Handle answer selection but DO NOT navigate immediately\r\n  const handleAnswerSelection = async (index) => {\r\n    const newAnswers = [...selectedAnswers];\r\n    newAnswers[currentQuestionIndex] = index;\r\n    setSelectedAnswers(newAnswers);\r\n\r\n    // ✅ Calculate score but DO NOT navigate\r\n    const isCorrect = quiz.questions[currentQuestionIndex].correctAnswer === index;\r\n    const score = isCorrect ? 100 : 0;\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\r\n        roomId: roomNo,\r\n        username: localStorage.getItem(\"username\"),\r\n        score: score,\r\n      });\r\n      console.log(\"✅ Score submitted!\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error submitting score:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <h2>Loading quiz...</h2>;\r\n  if (error) return <h2>{error}</h2>;\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1 className=\"quiz-title\">{quiz.quizTitle} (Room: {roomNo})</h1>\r\n      <h2 className=\"quiz-question\">{quiz.questions[currentQuestionIndex].question}</h2>\r\n      <div className=\"quiz-timer\">⏳ {timer}s</div>\r\n\r\n      <div className=\"quiz-options-grid\">\r\n        {quiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n          <div\r\n            key={index}\r\n            className={`quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`}\r\n            onClick={() => handleAnswerSelection(index)}\r\n          >\r\n            {option}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}