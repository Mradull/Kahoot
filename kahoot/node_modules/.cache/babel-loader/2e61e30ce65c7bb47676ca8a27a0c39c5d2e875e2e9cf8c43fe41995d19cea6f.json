{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\LeaderboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/LeaderboardPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Leaderboard = () => {\n  _s();\n  var _location$state, _location$state2;\n  const navigate = useNavigate();\n  const {\n    roomNo\n  } = useParams();\n  const location = useLocation();\n  const currentQuestionIndex = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentQuestion) || 0;\n  const totalQuestions = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.totalQuestions) || 1;\n  const [leaderboard, setLeaderboard] = useState([]);\n  const [timer, setTimer] = useState(7);\n  const [quizCompleted, setQuizCompleted] = useState(false);\n  useEffect(() => {\n    const fetchLeaderboard = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/quizzes/leaderboard/${roomNo}`);\n        setLeaderboard(response.data);\n      } catch (error) {\n        console.error(\"‚ùå Error fetching leaderboard:\", error);\n      }\n    };\n    fetchLeaderboard();\n  }, [roomNo]);\n  useEffect(() => {\n    if (currentQuestionIndex < totalQuestions - 1) {\n      const countdown = setInterval(() => {\n        setTimer(prev => prev - 1);\n      }, 1000);\n      setTimeout(() => {\n        navigate(`/quiz/${roomNo}`, {\n          state: {\n            currentQuestion: currentQuestionIndex + 1,\n            totalQuestions\n          }\n        });\n      }, 7000);\n      return () => clearInterval(countdown);\n    } else {\n      // ‚úÖ Mark quiz as completed once the final leaderboard appears\n      axios.put(`http://localhost:5000/api/quizzes/complete/${roomNo}`).then(() => {\n        console.log(\"‚úÖ Quiz marked as completed\");\n        setQuizCompleted(true);\n      }).catch(error => console.error(\"‚ùå Error marking quiz as completed:\", error));\n    }\n  }, [navigate, currentQuestionIndex, roomNo, totalQuestions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"leaderboard-title\",\n        children: [\"Leaderboard (Room: \", roomNo, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-list\",\n        children: leaderboard.length > 0 ? leaderboard.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: player.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [player.score, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 48\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No players yet.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), currentQuestionIndex < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"leaderboard-info\",\n        children: [\"Next question in \\u23F3 \", timer, \"s...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"home-button\",\n        onClick: () => navigate(\"/\"),\n        children: \"\\uD83C\\uDFE0 Go to Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"vEsDExSOCbpIDxVcQch+ilozT1E=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useParams","axios","jsxDEV","_jsxDEV","Leaderboard","_s","_location$state","_location$state2","navigate","roomNo","location","currentQuestionIndex","state","currentQuestion","totalQuestions","leaderboard","setLeaderboard","timer","setTimer","quizCompleted","setQuizCompleted","fetchLeaderboard","response","get","data","error","console","countdown","setInterval","prev","setTimeout","clearInterval","put","then","log","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","player","index","username","score","onClick","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/LeaderboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/LeaderboardPage.css\";\r\n\r\nconst Leaderboard = () => {\r\n  const navigate = useNavigate();\r\n  const { roomNo } = useParams();\r\n  const location = useLocation();\r\n  const currentQuestionIndex = location.state?.currentQuestion || 0;\r\n  const totalQuestions = location.state?.totalQuestions || 1;\r\n  const [leaderboard, setLeaderboard] = useState([]);\r\n  const [timer, setTimer] = useState(7);\r\n  const [quizCompleted , setQuizCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLeaderboard = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/quizzes/leaderboard/${roomNo}`);\r\n        setLeaderboard(response.data);\r\n      } catch (error) {\r\n        console.error(\"‚ùå Error fetching leaderboard:\", error);\r\n      }\r\n    };\r\n\r\n    fetchLeaderboard();\r\n  }, [roomNo]);\r\n\r\n  useEffect(() => {\r\n    if (currentQuestionIndex < totalQuestions - 1) {\r\n      const countdown = setInterval(() => {\r\n        setTimer((prev) => prev - 1);\r\n      }, 1000);\r\n\r\n      setTimeout(() => {\r\n        navigate(`/quiz/${roomNo}`, { \r\n          state: { currentQuestion: currentQuestionIndex + 1, totalQuestions } \r\n        });\r\n      }, 7000);\r\n\r\n      return () => clearInterval(countdown);\r\n    }\r\n    else {\r\n      // ‚úÖ Mark quiz as completed once the final leaderboard appears\r\n      axios.put(`http://localhost:5000/api/quizzes/complete/${roomNo}`)\r\n        .then(() => {\r\n          console.log(\"‚úÖ Quiz marked as completed\");\r\n          setQuizCompleted(true);\r\n        })\r\n        .catch((error) => console.error(\"‚ùå Error marking quiz as completed:\", error));\r\n    }\r\n  }, [navigate, currentQuestionIndex, roomNo, totalQuestions]);\r\n\r\n  return (\r\n    <div className=\"leaderboard-background\">\r\n      <div className=\"leaderboard-container\">\r\n        <h2 className=\"leaderboard-title\">Leaderboard (Room: {roomNo})</h2>\r\n        <div className=\"leaderboard-list\">\r\n          {leaderboard.length > 0 ? (\r\n            leaderboard.map((player, index) => (\r\n              <div key={index} className=\"leaderboard-item\">\r\n                <span>{player.username}</span> <strong>{player.score} pts</strong>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No players yet.</p>\r\n          )}\r\n        </div>\r\n\r\n        {currentQuestionIndex < totalQuestions - 1 ? (\r\n          <p className=\"leaderboard-info\">Next question in ‚è≥ {timer}s...</p>\r\n        ) : (\r\n          <button className=\"home-button\" onClick={() => navigate(\"/\")}>\r\n            üè† Go to Home\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}