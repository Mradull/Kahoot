{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\LeaderboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\nimport \"../styles/LeaderboardPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leaderboardData = [{\n  name: \"Alice\",\n  score: 100\n}, {\n  name: \"Bob\",\n  score: 80\n}, {\n  name: \"Charlie\",\n  score: 60\n}];\nconst Leaderboard = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const {\n    roomNo\n  } = useParams();\n  const location = useLocation();\n  const currentQuestionIndex = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentQuestion) || 0;\n  const totalQuestions = 3;\n  const [timer, setTimer] = useState(7);\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prev => prev - 1);\n    }, 1000);\n    setTimeout(() => {\n      if (currentQuestionIndex < totalQuestions - 1) {\n        navigate(`/quiz/${roomNo}`, {\n          state: {\n            currentQuestion: currentQuestionIndex + 1\n          }\n        });\n      }\n    }, 7000);\n    return () => clearInterval(countdown);\n  }, [navigate, currentQuestionIndex, roomNo]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-background\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"leaderboard-title\",\n        children: [\"Leaderboard (Room: \", roomNo, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-list\",\n        children: leaderboardData.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"leaderboard-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: player.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [player.score, \" pts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 42\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"leaderboard-info\",\n        children: [\"Next question in \\u23F3 \", timer, \"s...\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"/idKcunwY8y53n1wOf22FIh2qaM=\", false, function () {\n  return [useNavigate, useParams, useLocation];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","useLocation","useParams","jsxDEV","_jsxDEV","leaderboardData","name","score","Leaderboard","_s","_location$state","navigate","roomNo","location","currentQuestionIndex","state","currentQuestion","totalQuestions","timer","setTimer","countdown","setInterval","prev","setTimeout","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/LeaderboardPage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useLocation, useParams } from \"react-router-dom\";\r\nimport \"../styles/LeaderboardPage.css\";\r\n\r\nconst leaderboardData = [\r\n  { name: \"Alice\", score: 100 },\r\n  { name: \"Bob\", score: 80 },\r\n  { name: \"Charlie\", score: 60 },\r\n];\r\n\r\nconst Leaderboard = () => {\r\n  const navigate = useNavigate();\r\n  const { roomNo } = useParams();\r\n  const location = useLocation();\r\n  const currentQuestionIndex = location.state?.currentQuestion || 0;\r\n  const totalQuestions = 3;\r\n  const [timer, setTimer] = useState(7);\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    setTimeout(() => {\r\n      if (currentQuestionIndex < totalQuestions - 1) {\r\n        navigate(`/quiz/${roomNo}`, { state: { currentQuestion: currentQuestionIndex + 1 } });\r\n      }\r\n    }, 7000);\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [navigate, currentQuestionIndex, roomNo]);\r\n\r\n  return (\r\n    <div className=\"leaderboard-background\">\r\n      <div className=\"leaderboard-container\">\r\n        <h2 className=\"leaderboard-title\">Leaderboard (Room: {roomNo})</h2>\r\n        <div className=\"leaderboard-list\">\r\n          {leaderboardData.map((player, index) => (\r\n            <div key={index} className=\"leaderboard-item\">\r\n              <span>{player.name}</span> <strong>{player.score} pts</strong>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <p className=\"leaderboard-info\">Next question in ‚è≥ {timer}s...</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}