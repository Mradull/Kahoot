{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\LeaderboardPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"../styles/Leaderboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst leaderboardData = [{\n  name: \"Alice\",\n  score: 100\n}, {\n  name: \"Bob\",\n  score: 80\n}, {\n  name: \"Charlie\",\n  score: 60\n}];\nconst Leaderboard = () => {\n  _s();\n  var _location$state$curre, _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const currentQuestion = (_location$state$curre = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentQuestion) !== null && _location$state$curre !== void 0 ? _location$state$curre : 0;\n  const totalQuestions = 3; // Change according to your quiz length\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (currentQuestion < totalQuestions - 1) {\n        navigate(\"/\", {\n          state: {\n            nextQuestion: currentQuestion + 1\n          }\n        }); // Move to next question\n      }\n    }, 7000); // Auto-redirect after 7 seconds\n\n    return () => clearTimeout(timer);\n  }, [navigate, currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"leaderboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"leaderboard-title\",\n      children: \"Leaderboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"leaderboard-list\",\n      children: leaderboardData.map((player, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"leaderboard-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: player.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [player.score, \" pts\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 40\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), currentQuestion < totalQuestions - 1 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"leaderboard-info\",\n      children: \"Next question will start in 7 seconds...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"leaderboard-info\",\n      children: \"Quiz completed! Final Scores shown.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Leaderboard, \"gMsdikdDs1f1NUVrv3Ag60oK04k=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Leaderboard;\nexport default Leaderboard;\nvar _c;\n$RefreshReg$(_c, \"Leaderboard\");","map":{"version":3,"names":["React","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","leaderboardData","name","score","Leaderboard","_s","_location$state$curre","_location$state","navigate","location","currentQuestion","state","totalQuestions","timer","setTimeout","nextQuestion","clearTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","player","index","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/LeaderboardPage.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"../styles/Leaderboard.css\";\r\n\r\nconst leaderboardData = [\r\n  { name: \"Alice\", score: 100 },\r\n  { name: \"Bob\", score: 80 },\r\n  { name: \"Charlie\", score: 60 },\r\n];\r\n\r\nconst Leaderboard = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const currentQuestion = location.state?.currentQuestion ?? 0;\r\n  const totalQuestions = 3; // Change according to your quiz length\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      if (currentQuestion < totalQuestions - 1) {\r\n        navigate(\"/\", { state: { nextQuestion: currentQuestion + 1 } }); // Move to next question\r\n      }\r\n    }, 7000); // Auto-redirect after 7 seconds\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [navigate, currentQuestion]);\r\n\r\n  return (\r\n    <div className=\"leaderboard-container\">\r\n      <h2 className=\"leaderboard-title\">Leaderboard</h2>\r\n\r\n      <div className=\"leaderboard-list\">\r\n        {leaderboardData.map((player, index) => (\r\n          <div key={index} className=\"leaderboard-item\">\r\n            <span>{player.name}</span> <strong>{player.score} pts</strong>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {currentQuestion < totalQuestions - 1 ? (\r\n        <p className=\"leaderboard-info\">Next question will start in 7 seconds...</p>\r\n      ) : (\r\n        <p className=\"leaderboard-info\">Quiz completed! Final Scores shown.</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Leaderboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}