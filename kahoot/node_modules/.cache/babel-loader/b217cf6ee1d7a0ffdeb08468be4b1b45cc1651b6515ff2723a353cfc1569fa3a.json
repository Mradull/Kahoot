{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\Quiz.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport LeaderboardPage from \"./LeaderboardPage\"; // Import Leaderboard\nimport \"../styles/Quiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    roomCode\n  } = useParams();\n  const navigate = useNavigate();\n  const [timeLeft, setTimeLeft] = useState(20);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\n  const [quizData, setQuizData] = useState({\n    questions: [{\n      options: [\"3\", \"4\", \"5\", \"6\"]\n    }, {\n      options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"]\n    }]\n  });\n\n  // Mock player scores (Replace with real scores)\n  const [playerScores, setPlayerScores] = useState([{\n    name: \"Suzie\",\n    score: 904\n  }, {\n    name: \"Kasia\",\n    score: 823\n  }, {\n    name: \"John\",\n    score: 716\n  }, {\n    name: \"Mike\",\n    score: 311\n  }, {\n    name: \"Asia\",\n    score: 0\n  }, {\n    name: \"Alex\",\n    score: 250\n  }, {\n    name: \"Ryan\",\n    score: 150\n  }]);\n  useEffect(() => {\n    if (!showLeaderboard) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev === 1) {\n            setShowLeaderboard(true);\n            return 20;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [showLeaderboard, questionIndex]);\n  const moveToNextQuestion = () => {\n    if (questionIndex < quizData.questions.length - 1) {\n      setShowLeaderboard(false);\n      setQuestionIndex(questionIndex + 1);\n      setTimeLeft(20);\n    } else {\n      navigate(\"/results\"); // Redirect to results page after last question\n    }\n  };\n  if (showLeaderboard) {\n    return /*#__PURE__*/_jsxDEV(LeaderboardPage, {\n      scores: playerScores,\n      goToNextQuestion: moveToNextQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"timer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-circle\",\n        children: timeLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: quizData.questions[questionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `option option-${index}`,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"vVPzoNpGlCeVf+aNWLKJJzhqTg0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","LeaderboardPage","jsxDEV","_jsxDEV","QuizPage","_s","roomCode","navigate","timeLeft","setTimeLeft","questionIndex","setQuestionIndex","showLeaderboard","setShowLeaderboard","quizData","setQuizData","questions","options","playerScores","setPlayerScores","name","score","timer","setInterval","prev","clearInterval","moveToNextQuestion","length","scores","goToNextQuestion","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","option","index","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/Quiz.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport LeaderboardPage from \"./LeaderboardPage\";  // Import Leaderboard\r\nimport \"../styles/Quiz.css\";\r\n\r\nconst QuizPage = () => {\r\n  const { roomCode } = useParams();\r\n  const navigate = useNavigate();\r\n  const [timeLeft, setTimeLeft] = useState(20);\r\n  const [questionIndex, setQuestionIndex] = useState(0);\r\n  const [showLeaderboard, setShowLeaderboard] = useState(false);\r\n\r\n  const [quizData, setQuizData] = useState({\r\n    questions: [\r\n      { options: [\"3\", \"4\", \"5\", \"6\"] },\r\n      { options: [\"Berlin\", \"Madrid\", \"Paris\", \"Rome\"] },\r\n    ],\r\n  });\r\n\r\n  // Mock player scores (Replace with real scores)\r\n  const [playerScores, setPlayerScores] = useState([\r\n    { name: \"Suzie\", score: 904 },\r\n    { name: \"Kasia\", score: 823 },\r\n    { name: \"John\", score: 716 },\r\n    { name: \"Mike\", score: 311 },\r\n    { name: \"Asia\", score: 0 },\r\n    { name: \"Alex\", score: 250 },\r\n    { name: \"Ryan\", score: 150 },\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (!showLeaderboard) {\r\n      const timer = setInterval(() => {\r\n        setTimeLeft((prev) => {\r\n          if (prev === 1) {\r\n            setShowLeaderboard(true);\r\n            return 20;\r\n          }\r\n          return prev - 1;\r\n        });\r\n      }, 1000);\r\n\r\n      return () => clearInterval(timer);\r\n    }\r\n  }, [showLeaderboard, questionIndex]);\r\n\r\n  const moveToNextQuestion = () => {\r\n    if (questionIndex < quizData.questions.length - 1) {\r\n      setShowLeaderboard(false);\r\n      setQuestionIndex(questionIndex + 1);\r\n      setTimeLeft(20);\r\n    } else {\r\n      navigate(\"/results\"); // Redirect to results page after last question\r\n    }\r\n  };\r\n\r\n  if (showLeaderboard) {\r\n    return <LeaderboardPage scores={playerScores} goToNextQuestion={moveToNextQuestion} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      {/* Timer is now ABOVE the options */}\r\n      <div className=\"timer\">\r\n        <div className=\"time-circle\">{timeLeft}</div>\r\n      </div>\r\n\r\n      {/* Answer Options (2x2 Grid Layout) */}\r\n      <div className=\"options-container\">\r\n        {quizData.questions[questionIndex].options.map((option, index) => (\r\n          <button key={index} className={`option option-${index}`}>\r\n            {option}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,OAAOC,eAAe,MAAM,mBAAmB,CAAC,CAAE;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAS,CAAC,GAAGP,SAAS,CAAC,CAAC;EAChC,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACe,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IACvCmB,SAAS,EAAE,CACT;MAAEC,OAAO,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAAE,CAAC,EACjC;MAAEA,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM;IAAE,CAAC;EAEtD,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,CAC/C;IAAEuB,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC7B;IAAED,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC7B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAE,CAAC,EAC1B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC5B;IAAED,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC7B,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACd,IAAI,CAACc,eAAe,EAAE;MACpB,MAAMU,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9Bd,WAAW,CAAEe,IAAI,IAAK;UACpB,IAAIA,IAAI,KAAK,CAAC,EAAE;YACdX,kBAAkB,CAAC,IAAI,CAAC;YACxB,OAAO,EAAE;UACX;UACA,OAAOW,IAAI,GAAG,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;IACnC;EACF,CAAC,EAAE,CAACV,eAAe,EAAEF,aAAa,CAAC,CAAC;EAEpC,MAAMgB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIhB,aAAa,GAAGI,QAAQ,CAACE,SAAS,CAACW,MAAM,GAAG,CAAC,EAAE;MACjDd,kBAAkB,CAAC,KAAK,CAAC;MACzBF,gBAAgB,CAACD,aAAa,GAAG,CAAC,CAAC;MACnCD,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM;MACLF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;EAED,IAAIK,eAAe,EAAE;IACnB,oBAAOT,OAAA,CAACF,eAAe;MAAC2B,MAAM,EAAEV,YAAa;MAACW,gBAAgB,EAAEH;IAAmB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACxF;EAEA,oBACE9B,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAE7BhC,OAAA;MAAK+B,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBhC,OAAA;QAAK+B,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAE3B;MAAQ;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eAGN9B,OAAA;MAAK+B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAC/BrB,QAAQ,CAACE,SAAS,CAACN,aAAa,CAAC,CAACO,OAAO,CAACmB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC3DnC,OAAA;QAAoB+B,SAAS,EAAE,iBAAiBI,KAAK,EAAG;QAAAH,QAAA,EACrDE;MAAM,GADIC,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxEID,QAAQ;EAAA,QACSL,SAAS,EACbC,WAAW;AAAA;AAAAuC,EAAA,GAFxBnC,QAAQ;AA0Ed,eAAeA,QAAQ;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}