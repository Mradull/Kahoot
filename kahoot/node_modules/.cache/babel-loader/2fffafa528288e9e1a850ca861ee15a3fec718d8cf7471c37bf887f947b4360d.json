{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\JoinQuiz.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"../styles/JoinQuiz.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JoinQuiz() {\n  _s();\n  const [quizCode, setQuizCode] = useState(\"\");\n  const navigate = useNavigate();\n  const handleJoin = () => {\n    // You can add logic here to validate the quiz code before navigating\n    if (quizCode) {\n      navigate(`/quiz/${quizCode}`); // Redirect to the quiz page with the quiz code\n    } else {\n      alert(\"Please enter a valid quiz code\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"joinquiz-background\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinquiz-header\",\n      children: \"Join a Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinquiz-instructions\",\n      children: \"Enter the quiz code provided by your instructor or host to join the quiz.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-code-input-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"quiz-code-input\",\n        placeholder: \"Enter Quiz Code\",\n        value: quizCode,\n        onChange: e => setQuizCode(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"join-button\",\n        onClick: handleJoin,\n        children: \"Join Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(JoinQuiz, \"jOtMzbap1INlnFO4m3n+BS9F+vo=\", false, function () {\n  return [useNavigate];\n});\n_c = JoinQuiz;\nvar _c;\n$RefreshReg$(_c, \"JoinQuiz\");","map":{"version":3,"names":["useState","useNavigate","jsxDEV","_jsxDEV","JoinQuiz","_s","quizCode","setQuizCode","navigate","handleJoin","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/JoinQuiz.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../styles/JoinQuiz.css\";\r\n\r\nexport default function JoinQuiz() {\r\n  const [quizCode, setQuizCode] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleJoin = () => {\r\n    // You can add logic here to validate the quiz code before navigating\r\n    if (quizCode) {\r\n      navigate(`/quiz/${quizCode}`); // Redirect to the quiz page with the quiz code\r\n    } else {\r\n      alert(\"Please enter a valid quiz code\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"joinquiz-background\">\r\n      <div className=\"joinquiz-header\">Join a Quiz</div>\r\n      <div className=\"joinquiz-instructions\">\r\n        Enter the quiz code provided by your instructor or host to join the quiz.\r\n      </div>\r\n      <div className=\"quiz-code-input-wrapper\">\r\n        <input\r\n          type=\"text\"\r\n          className=\"quiz-code-input\"\r\n          placeholder=\"Enter Quiz Code\"\r\n          value={quizCode}\r\n          onChange={(e) => setQuizCode(e.target.value)}\r\n        />\r\n        <button className=\"join-button\" onClick={handleJoin}>\r\n          Join Quiz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EACjC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvB;IACA,IAAIH,QAAQ,EAAE;MACZE,QAAQ,CAAC,SAASF,QAAQ,EAAE,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACLI,KAAK,CAAC,gCAAgC,CAAC;IACzC;EACF,CAAC;EAED,oBACEP,OAAA;IAAKQ,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCT,OAAA;MAAKQ,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClDb,OAAA;MAAKQ,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAEvC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACNb,OAAA;MAAKQ,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtCT,OAAA;QACEc,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,iBAAiB;QAC3BO,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAEb,QAAS;QAChBc,QAAQ,EAAGC,CAAC,IAAKd,WAAW,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFb,OAAA;QAAQQ,SAAS,EAAC,aAAa;QAACY,OAAO,EAAEd,UAAW;QAAAG,QAAA,EAAC;MAErD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACX,EAAA,CAjCuBD,QAAQ;EAAA,QAEbH,WAAW;AAAA;AAAAuB,EAAA,GAFNpB,QAAQ;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}