{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/QuizPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  const {\n    roomNo\n  } = useParams(); // Get room number from URL\n  console.log(\"🆔 Received roomNo from URL:\", roomNo);\n  const navigate = useNavigate();\n  const [quiz, setQuiz] = useState(null); // Store fetched quiz data\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [timer, setTimer] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const [fetched, setFetched] = useState(false); // ✅ Prevent multiple fetches\n\n  // ✅ Fetch quiz from backend when component loads\n  useEffect(() => {\n    console.log(\"🆔 Received roomNo from URL:\", roomNo);\n    if (!roomNo || fetched) {\n      return;\n    }\n    const fetchQuiz = async () => {\n      try {\n        console.log(\"📡 Fetching quiz from API...\");\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\n        setQuiz(response.data);\n        setFetched(true); // ✅ Mark as fetched\n        setLoading(false);\n      } catch (err) {\n        console.error(\"❌ Error fetching quiz:\", err);\n        setError(\"Quiz not found.\");\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [roomNo, fetched]);\n\n  // ✅ Timer for each question\n  useEffect(() => {\n    if (!quiz) return;\n    if (timer === 0) {\n      if (currentQuestionIndex < quiz.questions.length - 1) {\n        setCurrentQuestionIndex(prev => prev + 1);\n        setTimer(10); // Reset timer for next question\n      } else {\n        navigate(`/leaderboard/${roomNo}`);\n      }\n    }\n    const countdown = setInterval(() => {\n      setTimer(prev => prev - 1);\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [timer, currentQuestionIndex, quiz, navigate, roomNo]);\n\n  // ✅ Handle answer selection\n  const handleAnswerSelection = async index => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[currentQuestionIndex] = index;\n    setSelectedAnswers(newAnswers);\n\n    // ✅ Calculate score\n    const isCorrect = quiz.questions[currentQuestionIndex].correctAnswer === index;\n    const score = isCorrect ? 100 : 0;\n\n    // ✅ Send score to backend\n    try {\n      await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\n        roomId: roomNo,\n        username: localStorage.getItem(\"username\"),\n        // Store username in localStorage\n        score: score\n      });\n      console.log(\"✅ Score submitted!\");\n    } catch (error) {\n      console.error(\"❌ Error submitting score:\", error);\n    }\n\n    // ✅ Redirect to leaderboard after answering\n    setTimeout(() => {\n      navigate(`/leaderboard/${roomNo}`, {\n        state: {\n          currentQuestion: currentQuestionIndex\n        }\n      });\n    }, 1000);\n  };\n\n  // ✅ Handle loading state\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quiz-title\",\n      children: [quiz.quizTitle, \" (Room: \", roomNo, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-question\",\n      children: quiz.questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-timer\",\n      children: [\"\\u23F3 \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-options-grid\",\n      children: quiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`,\n        onClick: () => handleAnswerSelection(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"Bf86eBGm2SKIUyXK5Z43yNP60kU=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","axios","jsxDEV","_jsxDEV","QuizPage","_s","roomNo","console","log","navigate","quiz","setQuiz","currentQuestionIndex","setCurrentQuestionIndex","selectedAnswers","setSelectedAnswers","timer","setTimer","loading","setLoading","error","setError","fetched","setFetched","fetchQuiz","response","get","data","err","questions","length","prev","countdown","setInterval","clearInterval","handleAnswerSelection","index","newAnswers","isCorrect","correctAnswer","score","post","roomId","username","localStorage","getItem","setTimeout","state","currentQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quizTitle","question","options","map","option","onClick","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/QuizPage.css\";\r\n\r\nconst QuizPage = () => {\r\n  const { roomNo } = useParams(); // Get room number from URL\r\n  console.log(\"🆔 Received roomNo from URL:\", roomNo);\r\n  const navigate = useNavigate();\r\n\r\n  const [quiz, setQuiz] = useState(null); // Store fetched quiz data\r\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [timer, setTimer] = useState(10);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const [fetched, setFetched] = useState(false); // ✅ Prevent multiple fetches\r\n\r\n  // ✅ Fetch quiz from backend when component loads\r\n  useEffect(() => {\r\n    console.log(\"🆔 Received roomNo from URL:\", roomNo);\r\n    if (!roomNo || fetched) {\r\n      return;\r\n    }\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        console.log(\"📡 Fetching quiz from API...\");\r\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\r\n        setQuiz(response.data);\r\n        setFetched(true); // ✅ Mark as fetched\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"❌ Error fetching quiz:\", err);\r\n        setError(\"Quiz not found.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchQuiz();\r\n  }, [roomNo , fetched]);\r\n\r\n  // ✅ Timer for each question\r\n  useEffect(() => {\r\n    if (!quiz) return;\r\n\r\n    if (timer === 0) {\r\n      if (currentQuestionIndex < quiz.questions.length - 1) {\r\n        setCurrentQuestionIndex((prev) => prev + 1);\r\n        setTimer(10); // Reset timer for next question\r\n      } else {\r\n        navigate(`/leaderboard/${roomNo}`);\r\n      }\r\n    }\r\n\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [timer, currentQuestionIndex, quiz, navigate, roomNo]);\r\n\r\n  // ✅ Handle answer selection\r\n  const handleAnswerSelection = async (index) => {\r\n    const newAnswers = [...selectedAnswers];\r\n    newAnswers[currentQuestionIndex] = index;\r\n    setSelectedAnswers(newAnswers);\r\n\r\n     // ✅ Calculate score\r\n    const isCorrect = quiz.questions[currentQuestionIndex].correctAnswer === index;\r\n    const score = isCorrect ? 100 : 0;\r\n\r\n     // ✅ Send score to backend\r\n      try {\r\n        await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\r\n          roomId: roomNo,\r\n          username: localStorage.getItem(\"username\"), // Store username in localStorage\r\n          score: score,\r\n        });\r\n        console.log(\"✅ Score submitted!\");\r\n      } catch (error) {\r\n        console.error(\"❌ Error submitting score:\", error);\r\n      }\r\n\r\n      // ✅ Redirect to leaderboard after answering\r\n      setTimeout(() => {\r\n        navigate(`/leaderboard/${roomNo}`, { state: { currentQuestion: currentQuestionIndex } });\r\n      }, 1000);\r\n  };\r\n\r\n  // ✅ Handle loading state\r\n  if (loading) return <h2>Loading quiz...</h2>;\r\n  if (error) return <h2>{error}</h2>;\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1 className=\"quiz-title\">{quiz.quizTitle} (Room: {roomNo})</h1>\r\n      <h2 className=\"quiz-question\">{quiz.questions[currentQuestionIndex].question}</h2>\r\n      <div className=\"quiz-timer\">⏳ {timer}s</div>\r\n\r\n      <div className=\"quiz-options-grid\">\r\n        {quiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n          <div\r\n            key={index}\r\n            className={`quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`}\r\n            onClick={() => handleAnswerSelection(index)}\r\n          >\r\n            {option}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}