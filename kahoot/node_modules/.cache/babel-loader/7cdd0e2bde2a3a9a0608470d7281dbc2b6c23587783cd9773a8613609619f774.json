{"ast":null,"code":"var _jsxFileName = \"D:\\\\kahoot-clone\\\\kahoot\\\\src\\\\pages\\\\QuizPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useParams, useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/QuizPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = () => {\n  _s();\n  var _location$state;\n  const {\n    roomNo\n  } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  // ✅ Correctly track which question we are on\n  const currentQuestionIndex = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.currentQuestion) || 0;\n  const [quiz, setQuiz] = useState(null);\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\n  const [timer, setTimer] = useState(10);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\n        setQuiz(response.data);\n        setSelectedAnswers(Array(response.data.questions.length).fill(null));\n        setLoading(false);\n      } catch (err) {\n        console.error(\"❌ Error fetching quiz:\", err);\n        setError(\"Quiz not found.\");\n        setLoading(false);\n      }\n    };\n    fetchQuiz();\n  }, [roomNo]);\n  useEffect(() => {\n    if (!quiz) return;\n    const currentQuestion = quiz.questions[currentQuestionIndex];\n    const timeLimitInSeconds = parseInt(currentQuestion.timeLimit.split(\" \")[0], 10) || 10; // Extract time limit\n\n    setTimer(timeLimitInSeconds);\n    const countdown = setInterval(() => {\n      setTimer(prev => {\n        if (prev <= 1) {\n          clearInterval(countdown);\n          handleTimeUp();\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(countdown); // ✅ Cleanup timer on unmount\n  }, [currentQuestionIndex, quiz]);\n\n  // ✅ Handle when time runs out\n  const handleTimeUp = () => {\n    if (currentQuestionIndex < quiz.questions.length - 1) {\n      navigate(`/quiz/${roomNo}`, {\n        state: {\n          currentQuestion: currentQuestionIndex + 1,\n          totalQuestions: quiz.questions.length\n        }\n      });\n    } else {\n      navigate(`/leaderboard/${roomNo}`, {\n        state: {\n          totalQuestions: quiz.questions.length\n        }\n      });\n    }\n  };\n\n  // ✅ Handle answer selection but DO NOT navigate immediately\n  const handleAnswerSelection = async index => {\n    const newAnswers = [...selectedAnswers];\n    newAnswers[currentQuestionIndex] = index;\n    setSelectedAnswers(newAnswers);\n    const currentQuestion = quiz.questions[currentQuestionIndex];\n    const correctAnswerIndex = currentQuestion.options.indexOf(currentQuestion.answer);\n    const isCorrect = correctAnswerIndex === index;\n\n    // ✅ Dynamic Points Calculation\n    let pointsAwarded = isCorrect ? 100 : 0;\n    if (currentQuestion.points === \"Double Points\") {\n      pointsAwarded *= 2;\n    }\n    try {\n      await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\n        roomId: roomNo,\n        username: localStorage.getItem(\"username\"),\n        score: pointsAwarded\n      });\n      console.log(\"✅ Score submitted!\");\n    } catch (error) {\n      console.error(\"❌ Error submitting score:\", error);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading quiz...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"quiz-title\",\n      children: [quiz.quizTitle, \" (Room: \", roomNo, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"quiz-question\",\n      children: quiz.questions[currentQuestionIndex].question\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-timer\",\n      children: [\"\\u23F3 \", timer, \"s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-options-grid\",\n      children: quiz.questions[currentQuestionIndex].options.map((option, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`,\n        onClick: () => handleAnswerSelection(index),\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"h9wcs/mzAO2jXLU2r0lunB6vf+Y=\", false, function () {\n  return [useParams, useLocation, useNavigate];\n});\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","useLocation","axios","jsxDEV","_jsxDEV","QuizPage","_s","_location$state","roomNo","location","navigate","currentQuestionIndex","state","currentQuestion","quiz","setQuiz","selectedAnswers","setSelectedAnswers","timer","setTimer","loading","setLoading","error","setError","fetchQuiz","response","get","data","Array","questions","length","fill","err","console","timeLimitInSeconds","parseInt","timeLimit","split","countdown","setInterval","prev","clearInterval","handleTimeUp","totalQuestions","handleAnswerSelection","index","newAnswers","correctAnswerIndex","options","indexOf","answer","isCorrect","pointsAwarded","points","post","roomId","username","localStorage","getItem","score","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","quizTitle","question","map","option","onClick","_c","$RefreshReg$"],"sources":["D:/kahoot-clone/kahoot/src/pages/QuizPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useParams , useLocation} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/QuizPage.css\";\r\n\r\nconst QuizPage = () => {\r\n  const { roomNo } = useParams();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  \r\n  // ✅ Correctly track which question we are on\r\n  const currentQuestionIndex = location.state?.currentQuestion || 0; \r\n\r\n  const [quiz, setQuiz] = useState(null);\r\n  const [selectedAnswers, setSelectedAnswers] = useState([]);\r\n  const [timer, setTimer] = useState(10);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchQuiz = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/quizzes/room/${roomNo}`);\r\n        setQuiz(response.data);\r\n        setSelectedAnswers(Array(response.data.questions.length).fill(null));\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(\"❌ Error fetching quiz:\", err);\r\n        setError(\"Quiz not found.\");\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchQuiz();\r\n  }, [roomNo]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (!quiz) return;\r\n\r\n    const currentQuestion = quiz.questions[currentQuestionIndex];\r\n    const timeLimitInSeconds = parseInt(currentQuestion.timeLimit.split(\" \")[0], 10) || 10; // Extract time limit\r\n\r\n    setTimer(timeLimitInSeconds);\r\n\r\n    const countdown = setInterval(() => {\r\n      setTimer((prev) => {\r\n        if (prev <= 1) {\r\n          clearInterval(countdown);\r\n          handleTimeUp();\r\n          return 0;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown); // ✅ Cleanup timer on unmount\r\n  }, [currentQuestionIndex, quiz]);\r\n\r\n  // ✅ Handle when time runs out\r\n  const handleTimeUp = () => {\r\n    if (currentQuestionIndex < quiz.questions.length - 1) {\r\n      navigate(`/quiz/${roomNo}`, {\r\n        state: { currentQuestion: currentQuestionIndex + 1, totalQuestions: quiz.questions.length },\r\n      });\r\n    } else {\r\n      navigate(`/leaderboard/${roomNo}`, {\r\n        state: { totalQuestions: quiz.questions.length },\r\n      });\r\n    }\r\n  };\r\n\r\n    \r\n\r\n  // ✅ Handle answer selection but DO NOT navigate immediately\r\n  const handleAnswerSelection = async (index) => {\r\n    const newAnswers = [...selectedAnswers];\r\n    newAnswers[currentQuestionIndex] = index;\r\n    setSelectedAnswers(newAnswers);\r\n\r\n    const currentQuestion = quiz.questions[currentQuestionIndex];\r\n    const correctAnswerIndex = currentQuestion.options.indexOf(currentQuestion.answer);\r\n    const isCorrect = correctAnswerIndex === index;\r\n\r\n    // ✅ Dynamic Points Calculation\r\n    let pointsAwarded = isCorrect ? 100 : 0;\r\n    if (currentQuestion.points === \"Double Points\") {\r\n      pointsAwarded *= 2;\r\n    }\r\n\r\n    try {\r\n      await axios.post(\"http://localhost:5000/api/quizzes/submit-score\", {\r\n        roomId: roomNo,\r\n        username: localStorage.getItem(\"username\"),\r\n        score: pointsAwarded,\r\n      });\r\n      console.log(\"✅ Score submitted!\");\r\n    } catch (error) {\r\n      console.error(\"❌ Error submitting score:\", error);\r\n    }\r\n  };\r\n\r\n  if (loading) return <h2>Loading quiz...</h2>;\r\n  if (error) return <h2>{error}</h2>;\r\n\r\n  return (\r\n    <div className=\"quiz-container\">\r\n      <h1 className=\"quiz-title\">{quiz.quizTitle} (Room: {roomNo})</h1>\r\n      <h2 className=\"quiz-question\">{quiz.questions[currentQuestionIndex].question}</h2>\r\n      <div className=\"quiz-timer\">⏳ {timer}s</div>\r\n\r\n      <div className=\"quiz-options-grid\">\r\n        {quiz.questions[currentQuestionIndex].options.map((option, index) => (\r\n          <div\r\n            key={index}\r\n            className={`quiz-option kahoot-color-${index} ${selectedAnswers[currentQuestionIndex] === index ? \"selected\" : \"\"}`}\r\n            onClick={() => handleAnswerSelection(index)}\r\n          >\r\n            {option}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}